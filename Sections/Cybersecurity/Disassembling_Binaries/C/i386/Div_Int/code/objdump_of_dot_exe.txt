
div_int_C_i386:     file format elf32-i386
div_int_C_i386
architecture: i386, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00001050

Program Header:
    PHDR off    0x00000034 vaddr 0x00000034 paddr 0x00000034 align 2**2
         filesz 0x00000160 memsz 0x00000160 flags r--
  INTERP off    0x00000194 vaddr 0x00000194 paddr 0x00000194 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x0000039c memsz 0x0000039c flags r--
    LOAD off    0x00001000 vaddr 0x00001000 paddr 0x00001000 align 2**12
         filesz 0x000001c4 memsz 0x000001c4 flags r-x
    LOAD off    0x00002000 vaddr 0x00002000 paddr 0x00002000 align 2**12
         filesz 0x000000f0 memsz 0x000000f0 flags r--
    LOAD off    0x00002ee8 vaddr 0x00003ee8 paddr 0x00003ee8 align 2**12
         filesz 0x00000124 memsz 0x00000128 flags rw-
 DYNAMIC off    0x00002ef0 vaddr 0x00003ef0 paddr 0x00003ef0 align 2**2
         filesz 0x000000f0 memsz 0x000000f0 flags rw-
    NOTE off    0x000001a8 vaddr 0x000001a8 paddr 0x000001a8 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002008 vaddr 0x00002008 paddr 0x00002008 align 2**2
         filesz 0x00000034 memsz 0x00000034 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00002ee8 vaddr 0x00003ee8 paddr 0x00003ee8 align 2**0
         filesz 0x00000118 memsz 0x00000118 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00001000
  FINI                 0x000011b0
  INIT_ARRAY           0x00003ee8
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00003eec
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x000001ec
  STRTAB               0x0000027c
  SYMTAB               0x0000020c
  STRSZ                0x00000097
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00003ff4
  PLTRELSZ             0x00000008
  PLTREL               0x00000011
  JMPREL               0x00000394
  REL                  0x00000354
  RELSZ                0x00000040
  RELENT               0x00000008
  FLAGS_1              0x08000000
  VERNEED              0x00000324
  VERNEEDNUM           0x00000001
  VERSYM               0x00000314
  RELCOUNT             0x00000004

Version References:
  required from libc.so.6:
    0x09691f73 0x00 03 GLIBC_2.1.3
    0x069691b4 0x00 02 GLIBC_2.34

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  00000194  00000194  00000194  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.build-id 00000024  000001a8  000001a8  000001a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.ABI-tag 00000020  000001cc  000001cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  000001ec  000001ec  000001ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000070  0000020c  0000020c  0000020c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000097  0000027c  0000027c  0000027c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  00000314  00000314  00000314  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  00000324  00000324  00000324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000040  00000354  00000354  00000354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000008  00000394  00000394  00000394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000020  00001000  00001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  00001020  00001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00001040  00001040  00001040  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000160  00001050  00001050  00001050  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  000011b0  000011b0  000011b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  00002000  00002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000034  00002008  00002008  00002008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000000b4  0000203c  0000203c  0000203c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  00003ee8  00003ee8  00002ee8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  00003eec  00003eec  00002eec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000f0  00003ef0  00003ef0  00002ef0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000014  00003fe0  00003fe0  00002fe0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000010  00003ff4  00003ff4  00002ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  00004004  00004004  00003004  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  0000400c  0000400c  0000300c  2**0
                  ALLOC
 25 .comment      0000004e  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000              Scrt1.o
000001cc l     O .note.ABI-tag	00000020              __abi_tag
00000000 l    df *ABS*	00000000              crtstuff.c
00001090 l     F .text	00000000              deregister_tm_clones
000010d0 l     F .text	00000000              register_tm_clones
00001120 l     F .text	00000000              __do_global_dtors_aux
0000400c l     O .bss	00000001              completed.0
00003eec l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
00001170 l     F .text	00000000              frame_dummy
00003ee8 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              div_int.c
00000000 l    df *ABS*	00000000              crtstuff.c
000020ec l     O .eh_frame	00000000              __FRAME_END__
00000000 l    df *ABS*	00000000              
00003ef0 l     O .dynamic	00000000              _DYNAMIC
00002008 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
00003ff4 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
00000000       F *UND*	00000000              __libc_start_main@GLIBC_2.34
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00001080 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
00004004  w      .data	00000000              data_start
0000400c g       .data	00000000              _edata
000011b0 g     F .fini	00000000              .hidden _fini
00001179 g     F .text	00000000              .hidden __x86.get_pc_thunk.dx
00000000  w    F *UND*	00000000              __cxa_finalize@GLIBC_2.1.3
00004004 g       .data	00000000              __data_start
00000000  w      *UND*	00000000              __gmon_start__
00004008 g     O .data	00000000              .hidden __dso_handle
00002004 g     O .rodata	00000004              _IO_stdin_used
00004010 g       .bss	00000000              _end
00001050 g     F .text	0000002c              _start
00002000 g     O .rodata	00000004              _fp_hw
0000400c g       .bss	00000000              __bss_start
0000117d g     F .text	0000002f              main
000011ac g     F .text	00000000              .hidden __x86.get_pc_thunk.ax
0000400c g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00001000 g     F .init	00000000              .hidden _init


Contents of section .interp:
 0194 2f6c6962 2f6c642d 6c696e75 782e736f  /lib/ld-linux.so
 01a4 2e3200                               .2.             
Contents of section .note.gnu.build-id:
 01a8 04000000 14000000 03000000 474e5500  ............GNU.
 01b8 184a0108 c4249928 677b57e0 20fd180d  .J...$.(g{W. ...
 01c8 f8bf0caf                             ....            
Contents of section .note.ABI-tag:
 01cc 04000000 10000000 01000000 474e5500  ............GNU.
 01dc 00000000 03000000 02000000 00000000  ................
Contents of section .gnu.hash:
 01ec 02000000 06000000 01000000 05000000  ................
 01fc 00200020 00000000 06000000 ad4be3c0  . . .........K..
Contents of section .dynsym:
 020c 00000000 00000000 00000000 00000000  ................
 021c 10000000 00000000 00000000 12000000  ................
 022c 52000000 00000000 00000000 20000000  R........... ...
 023c 22000000 00000000 00000000 22000000  "..........."...
 024c 6e000000 00000000 00000000 20000000  n........... ...
 025c 7d000000 00000000 00000000 20000000  }........... ...
 026c 01000000 04200000 04000000 11001000  ..... ..........
Contents of section .dynstr:
 027c 005f494f 5f737464 696e5f75 73656400  ._IO_stdin_used.
 028c 5f5f6c69 62635f73 74617274 5f6d6169  __libc_start_mai
 029c 6e005f5f 6378615f 66696e61 6c697a65  n.__cxa_finalize
 02ac 006c6962 632e736f 2e360047 4c494243  .libc.so.6.GLIBC
 02bc 5f322e31 2e330047 4c494243 5f322e33  _2.1.3.GLIBC_2.3
 02cc 34005f49 544d5f64 65726567 69737465  4._ITM_deregiste
 02dc 72544d43 6c6f6e65 5461626c 65005f5f  rTMCloneTable.__
 02ec 676d6f6e 5f737461 72745f5f 005f4954  gmon_start__._IT
 02fc 4d5f7265 67697374 6572544d 436c6f6e  M_registerTMClon
 030c 65546162 6c6500                      eTable.         
Contents of section .gnu.version:
 0314 00000200 01000300 01000100 0100      ..............  
Contents of section .gnu.version_r:
 0324 01000200 31000000 10000000 00000000  ....1...........
 0334 731f6909 00000300 3b000000 10000000  s.i.....;.......
 0344 b4919606 00000200 47000000 00000000  ........G.......
Contents of section .rel.dyn:
 0354 e83e0000 08000000 ec3e0000 08000000  .>.......>......
 0364 ec3f0000 08000000 08400000 08000000  .?.......@......
 0374 e03f0000 06020000 e43f0000 06030000  .?.......?......
 0384 e83f0000 06040000 f03f0000 06050000  .?.......?......
Contents of section .rel.plt:
 0394 00400000 07010000                    .@......        
Contents of section .init:
 1000 5383ec08 e8770000 0081c3eb 2f00008b  S....w....../...
 1010 83f4ffff ff85c074 02ffd083 c4085bc3  .......t......[.
Contents of section .plt:
 1020 ffb30400 0000ffa3 08000000 00000000  ................
 1030 ffa30c00 00006800 000000e9 e0ffffff  ......h.........
Contents of section .plt.got:
 1040 ffa3f0ff ffff6690                    ......f.        
Contents of section .text:
 1050 31ed5e89 e183e4f0 505452e8 18000000  1.^.....PTR.....
 1060 81c3942f 00006a00 6a005156 ffb3f8ff  .../..j.j.QV....
 1070 ffffe8b9 fffffff4 8b1c24c3 66906690  ..........$.f.f.
 1080 8b1c24c3 66906690 66906690 66906690  ..$.f.f.f.f.f.f.
 1090 e8e40000 0081c25f 2f00008d 8a180000  ......._/.......
 10a0 008d8218 00000039 c8741d8b 82ecffff  .......9.t......
 10b0 ff85c074 135589e5 83ec1451 ffd083c4  ...t.U.....Q....
 10c0 10c9c38d 74260090 c38db426 00000000  ....t&.....&....
 10d0 e8a40000 0081c21f 2f000055 89e5538d  ......../..U..S.
 10e0 8a180000 008d8218 00000083 ec0429c8  ..............).
 10f0 89c3c1e8 1fc1fb02 01d8d1f8 74148b92  ............t...
 1100 fcffffff 85d2740a 83ec0850 51ffd283  ......t....PQ...
 1110 c4108b5d fcc9c38d b4260000 00006690  ...].....&....f.
 1120 f30f1efb 5589e553 e853ffff ff81c3c7  ....U..S.S......
 1130 2e000083 ec0480bb 18000000 0075278b  .............u'.
 1140 83f0ffff ff85c074 1183ec0c ffb31400  .......t........
 1150 0000e8e9 feffff83 c410e831 ffffffc6  ...........1....
 1160 83180000 00018b5d fcc9c38d 74260090  .......]....t&..
 1170 f30f1efb e957ffff ff8b1424 c35589e5  .....W.....$.U..
 1180 83ec10e8 24000000 056c2e00 00c745fc  ....$....l....E.
 1190 0a000000 c745f805 0000008b 45fc99f7  .....E......E...
 11a0 7df88945 f4b80000 0000c9c3 8b0424c3  }..E..........$.
Contents of section .fini:
 11b0 5383ec08 e8c7feff ff81c33b 2e000083  S..........;....
 11c0 c4085bc3                             ..[.            
Contents of section .rodata:
 2000 03000000 01000200                    ........        
Contents of section .eh_frame_hdr:
 2008 011b033b 30000000 05000000 18f0ffff  ...;0...........
 2018 78000000 38f0ffff 9c000000 48f0ffff  x...8.......H...
 2028 4c000000 75f1ffff b0000000 a4f1ffff  L...u...........
 2038 d0000000                             ....            
Contents of section .eh_frame:
 203c 14000000 00000000 017a5200 017c0801  .........zR..|..
 204c 1b0c0404 88010708 10000000 1c000000  ................
 205c f4efffff 2c000000 00000000 14000000  ....,...........
 206c 00000000 017a5200 017c0801 1b0c0404  .....zR..|......
 207c 88010000 20000000 1c000000 98efffff  .... ...........
 208c 20000000 000e0846 0e0c4a0f 0b740478   ......F..J..t.x
 209c 003f1a3b 2a322422 10000000 40000000  .?.;*2$"....@...
 20ac 94efffff 08000000 00000000 1c000000  ................
 20bc 54000000 bdf0ffff 2f000000 00410e08  T......./....A..
 20cc 8502420d 056bc50c 04040000 10000000  ..B..k..........
 20dc 74000000 ccf0ffff 04000000 00000000  t...............
 20ec 00000000                             ....            
Contents of section .init_array:
 3ee8 70110000                             p...            
Contents of section .fini_array:
 3eec 20110000                              ...            
Contents of section .dynamic:
 3ef0 01000000 31000000 0c000000 00100000  ....1...........
 3f00 0d000000 b0110000 19000000 e83e0000  .............>..
 3f10 1b000000 04000000 1a000000 ec3e0000  .............>..
 3f20 1c000000 04000000 f5feff6f ec010000  ...........o....
 3f30 05000000 7c020000 06000000 0c020000  ....|...........
 3f40 0a000000 97000000 0b000000 10000000  ................
 3f50 15000000 00000000 03000000 f43f0000  .............?..
 3f60 02000000 08000000 14000000 11000000  ................
 3f70 17000000 94030000 11000000 54030000  ............T...
 3f80 12000000 40000000 13000000 08000000  ....@...........
 3f90 fbffff6f 00000008 feffff6f 24030000  ...o.......o$...
 3fa0 ffffff6f 01000000 f0ffff6f 14030000  ...o.......o....
 3fb0 faffff6f 04000000 00000000 00000000  ...o............
 3fc0 00000000 00000000 00000000 00000000  ................
 3fd0 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 3fe0 00000000 00000000 00000000 7d110000  ............}...
 3ff0 00000000                             ....            
Contents of section .got.plt:
 3ff4 f03e0000 00000000 00000000 36100000  .>..........6...
Contents of section .data:
 4004 00000000 08400000                    .....@..        
Contents of section .comment:
 0000 4743433a 20284465 6269616e 2031322e  GCC: (Debian 12.
 0010 322e302d 31342b64 65623132 75312920  2.0-14+deb12u1) 
 0020 31322e32 2e300047 43433a20 28636f6e  12.2.0.GCC: (con
 0030 64612d66 6f726765 20676363 2031342e  da-forge gcc 14.
 0040 322e302d 32292031 342e322e 3000      2.0-2) 14.2.0.  

Disassembly of section .interp:

00000194 <.interp>:
 194:	2f                   	das
 195:	6c                   	ins    BYTE PTR es:[edi],dx
 196:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 19d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 1a4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.gnu.build-id:

000001a8 <.note.gnu.build-id>:
 1a8:	04 00                	add    al,0x0
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	14 00                	adc    al,0x0
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	03 00                	add    eax,DWORD PTR [eax]
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	47                   	inc    edi
 1b5:	4e                   	dec    esi
 1b6:	55                   	push   ebp
 1b7:	00 18                	add    BYTE PTR [eax],bl
 1b9:	4a                   	dec    edx
 1ba:	01 08                	add    DWORD PTR [eax],ecx
 1bc:	c4 24 99             	les    esp,FWORD PTR [ecx+ebx*4]
 1bf:	28 67 7b             	sub    BYTE PTR [edi+0x7b],ah
 1c2:	57                   	push   edi
 1c3:	e0 20                	loopne 1e5 <__abi_tag+0x19>
 1c5:	fd                   	std
 1c6:	18 0d f8 bf 0c af    	sbb    BYTE PTR ds:0xaf0cbff8,cl

Disassembly of section .note.ABI-tag:

000001cc <__abi_tag>:
 1cc:	04 00                	add    al,0x0
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	10 00                	adc    BYTE PTR [eax],al
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	01 00                	add    DWORD PTR [eax],eax
 1d6:	00 00                	add    BYTE PTR [eax],al
 1d8:	47                   	inc    edi
 1d9:	4e                   	dec    esi
 1da:	55                   	push   ebp
 1db:	00 00                	add    BYTE PTR [eax],al
 1dd:	00 00                	add    BYTE PTR [eax],al
 1df:	00 03                	add    BYTE PTR [ebx],al
 1e1:	00 00                	add    BYTE PTR [eax],al
 1e3:	00 02                	add    BYTE PTR [edx],al
 1e5:	00 00                	add    BYTE PTR [eax],al
 1e7:	00 00                	add    BYTE PTR [eax],al
 1e9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.hash:

000001ec <.gnu.hash>:
 1ec:	02 00                	add    al,BYTE PTR [eax]
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	06                   	push   es
 1f1:	00 00                	add    BYTE PTR [eax],al
 1f3:	00 01                	add    BYTE PTR [ecx],al
 1f5:	00 00                	add    BYTE PTR [eax],al
 1f7:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 1fd:	20 00                	and    BYTE PTR [eax],al
 1ff:	20 00                	and    BYTE PTR [eax],al
 201:	00 00                	add    BYTE PTR [eax],al
 203:	00 06                	add    BYTE PTR [esi],al
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00                   	.byte 0x0
 208:	ad                   	lods   eax,DWORD PTR ds:[esi]
 209:	4b                   	dec    ebx
 20a:	e3 c0                	jecxz  1cc <__abi_tag>

Disassembly of section .dynsym:

0000020c <.dynsym>:
	...
 21c:	10 00                	adc    BYTE PTR [eax],al
	...
 226:	00 00                	add    BYTE PTR [eax],al
 228:	12 00                	adc    al,BYTE PTR [eax]
 22a:	00 00                	add    BYTE PTR [eax],al
 22c:	52                   	push   edx
	...
 235:	00 00                	add    BYTE PTR [eax],al
 237:	00 20                	add    BYTE PTR [eax],ah
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	00 22                	add    BYTE PTR [edx],ah
	...
 245:	00 00                	add    BYTE PTR [eax],al
 247:	00 22                	add    BYTE PTR [edx],ah
 249:	00 00                	add    BYTE PTR [eax],al
 24b:	00 6e 00             	add    BYTE PTR [esi+0x0],ch
	...
 256:	00 00                	add    BYTE PTR [eax],al
 258:	20 00                	and    BYTE PTR [eax],al
 25a:	00 00                	add    BYTE PTR [eax],al
 25c:	7d 00                	jge    25e <__abi_tag+0x92>
	...
 266:	00 00                	add    BYTE PTR [eax],al
 268:	20 00                	and    BYTE PTR [eax],al
 26a:	00 00                	add    BYTE PTR [eax],al
 26c:	01 00                	add    DWORD PTR [eax],eax
 26e:	00 00                	add    BYTE PTR [eax],al
 270:	04 20                	add    al,0x20
 272:	00 00                	add    BYTE PTR [eax],al
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [eax],al
 278:	11 00                	adc    DWORD PTR [eax],eax
 27a:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

0000027c <.dynstr>:
 27c:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 27f:	4f                   	dec    edi
 280:	5f                   	pop    edi
 281:	73 74                	jae    2f7 <__abi_tag+0x12b>
 283:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 28a:	64 
 28b:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 28e:	6c                   	ins    BYTE PTR es:[edi],dx
 28f:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 296:	72 74                	jb     30c <__abi_tag+0x140>
 298:	5f                   	pop    edi
 299:	6d                   	ins    DWORD PTR es:[edi],dx
 29a:	61                   	popa
 29b:	69 6e 00 5f 5f 63 78 	imul   ebp,DWORD PTR [esi+0x0],0x78635f5f
 2a2:	61                   	popa
 2a3:	5f                   	pop    edi
 2a4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 2aa:	7a 65                	jp     311 <__abi_tag+0x145>
 2ac:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 2b0:	63 2e                	arpl   WORD PTR [esi],bp
 2b2:	73 6f                	jae    323 <__abi_tag+0x157>
 2b4:	2e 36 00 47 4c       	cs add BYTE PTR ss:[edi+0x4c],al
 2b9:	49                   	dec    ecx
 2ba:	42                   	inc    edx
 2bb:	43                   	inc    ebx
 2bc:	5f                   	pop    edi
 2bd:	32 2e                	xor    ch,BYTE PTR [esi]
 2bf:	31 2e                	xor    DWORD PTR [esi],ebp
 2c1:	33 00                	xor    eax,DWORD PTR [eax]
 2c3:	47                   	inc    edi
 2c4:	4c                   	dec    esp
 2c5:	49                   	dec    ecx
 2c6:	42                   	inc    edx
 2c7:	43                   	inc    ebx
 2c8:	5f                   	pop    edi
 2c9:	32 2e                	xor    ch,BYTE PTR [esi]
 2cb:	33 34 00             	xor    esi,DWORD PTR [eax+eax*1]
 2ce:	5f                   	pop    edi
 2cf:	49                   	dec    ecx
 2d0:	54                   	push   esp
 2d1:	4d                   	dec    ebp
 2d2:	5f                   	pop    edi
 2d3:	64 65 72 65          	fs gs jb 33c <__abi_tag+0x170>
 2d7:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 2de:	4d 
 2df:	43                   	inc    ebx
 2e0:	6c                   	ins    BYTE PTR es:[edi],dx
 2e1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2e2:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2e3:	65 54                	gs push esp
 2e5:	61                   	popa
 2e6:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 2ea:	5f                   	pop    edi
 2eb:	5f                   	pop    edi
 2ec:	67 6d                	ins    DWORD PTR es:[di],dx
 2ee:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ef:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2f0:	5f                   	pop    edi
 2f1:	73 74                	jae    367 <__abi_tag+0x19b>
 2f3:	61                   	popa
 2f4:	72 74                	jb     36a <__abi_tag+0x19e>
 2f6:	5f                   	pop    edi
 2f7:	5f                   	pop    edi
 2f8:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 2fb:	54                   	push   esp
 2fc:	4d                   	dec    ebp
 2fd:	5f                   	pop    edi
 2fe:	72 65                	jb     365 <__abi_tag+0x199>
 300:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 307:	4d 
 308:	43                   	inc    ebx
 309:	6c                   	ins    BYTE PTR es:[edi],dx
 30a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 30b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 30c:	65 54                	gs push esp
 30e:	61                   	popa
 30f:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]

Disassembly of section .gnu.version:

00000314 <.gnu.version>:
 314:	00 00                	add    BYTE PTR [eax],al
 316:	02 00                	add    al,BYTE PTR [eax]
 318:	01 00                	add    DWORD PTR [eax],eax
 31a:	03 00                	add    eax,DWORD PTR [eax]
 31c:	01 00                	add    DWORD PTR [eax],eax
 31e:	01 00                	add    DWORD PTR [eax],eax
 320:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

00000324 <.gnu.version_r>:
 324:	01 00                	add    DWORD PTR [eax],eax
 326:	02 00                	add    al,BYTE PTR [eax]
 328:	31 00                	xor    DWORD PTR [eax],eax
 32a:	00 00                	add    BYTE PTR [eax],al
 32c:	10 00                	adc    BYTE PTR [eax],al
 32e:	00 00                	add    BYTE PTR [eax],al
 330:	00 00                	add    BYTE PTR [eax],al
 332:	00 00                	add    BYTE PTR [eax],al
 334:	73 1f                	jae    355 <__abi_tag+0x189>
 336:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [ecx],0x30000
 33c:	3b 00                	cmp    eax,DWORD PTR [eax]
 33e:	00 00                	add    BYTE PTR [eax],al
 340:	10 00                	adc    BYTE PTR [eax],al
 342:	00 00                	add    BYTE PTR [eax],al
 344:	b4 91                	mov    ah,0x91
 346:	96                   	xchg   esi,eax
 347:	06                   	push   es
 348:	00 00                	add    BYTE PTR [eax],al
 34a:	02 00                	add    al,BYTE PTR [eax]
 34c:	47                   	inc    edi
 34d:	00 00                	add    BYTE PTR [eax],al
 34f:	00 00                	add    BYTE PTR [eax],al
 351:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000354 <.rel.dyn>:
 354:	e8 3e 00 00 08       	call   8000397 <_end+0x7ffc387>
 359:	00 00                	add    BYTE PTR [eax],al
 35b:	00 ec                	add    ah,ch
 35d:	3e 00 00             	add    BYTE PTR ds:[eax],al
 360:	08 00                	or     BYTE PTR [eax],al
 362:	00 00                	add    BYTE PTR [eax],al
 364:	ec                   	in     al,dx
 365:	3f                   	aas
 366:	00 00                	add    BYTE PTR [eax],al
 368:	08 00                	or     BYTE PTR [eax],al
 36a:	00 00                	add    BYTE PTR [eax],al
 36c:	08 40 00             	or     BYTE PTR [eax+0x0],al
 36f:	00 08                	add    BYTE PTR [eax],cl
 371:	00 00                	add    BYTE PTR [eax],al
 373:	00 e0                	add    al,ah
 375:	3f                   	aas
 376:	00 00                	add    BYTE PTR [eax],al
 378:	06                   	push   es
 379:	02 00                	add    al,BYTE PTR [eax]
 37b:	00 e4                	add    ah,ah
 37d:	3f                   	aas
 37e:	00 00                	add    BYTE PTR [eax],al
 380:	06                   	push   es
 381:	03 00                	add    eax,DWORD PTR [eax]
 383:	00 e8                	add    al,ch
 385:	3f                   	aas
 386:	00 00                	add    BYTE PTR [eax],al
 388:	06                   	push   es
 389:	04 00                	add    al,0x0
 38b:	00 f0                	add    al,dh
 38d:	3f                   	aas
 38e:	00 00                	add    BYTE PTR [eax],al
 390:	06                   	push   es
 391:	05                   	.byte 0x5
	...

Disassembly of section .rel.plt:

00000394 <.rel.plt>:
 394:	00 40 00             	add    BYTE PTR [eax+0x0],al
 397:	00 07                	add    BYTE PTR [edi],al
 399:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   ebx
    1001:	83 ec 08             	sub    esp,0x8
    1004:	e8 77 00 00 00       	call   1080 <__x86.get_pc_thunk.bx>
    1009:	81 c3 eb 2f 00 00    	add    ebx,0x2feb
    100f:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
    1015:	85 c0                	test   eax,eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   eax
    101b:	83 c4 08             	add    esp,0x8
    101e:	5b                   	pop    ebx
    101f:	c3                   	ret

Disassembly of section .plt:

00001020 <__libc_start_main@plt-0x10>:
    1020:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1026:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    102c:	00 00                	add    BYTE PTR [eax],al
	...

00001030 <__libc_start_main@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00001040 <__cxa_finalize@plt>:
    1040:	ff a3 f0 ff ff ff    	jmp    DWORD PTR [ebx-0x10]
    1046:	66 90                	xchg   ax,ax

Disassembly of section .text:

00001050 <_start>:
    1050:	31 ed                	xor    ebp,ebp
    1052:	5e                   	pop    esi
    1053:	89 e1                	mov    ecx,esp
    1055:	83 e4 f0             	and    esp,0xfffffff0
    1058:	50                   	push   eax
    1059:	54                   	push   esp
    105a:	52                   	push   edx
    105b:	e8 18 00 00 00       	call   1078 <_start+0x28>
    1060:	81 c3 94 2f 00 00    	add    ebx,0x2f94
    1066:	6a 00                	push   0x0
    1068:	6a 00                	push   0x0
    106a:	51                   	push   ecx
    106b:	56                   	push   esi
    106c:	ff b3 f8 ff ff ff    	push   DWORD PTR [ebx-0x8]
    1072:	e8 b9 ff ff ff       	call   1030 <__libc_start_main@plt>
    1077:	f4                   	hlt
    1078:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    107b:	c3                   	ret
    107c:	66 90                	xchg   ax,ax
    107e:	66 90                	xchg   ax,ax

00001080 <__x86.get_pc_thunk.bx>:
    1080:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1083:	c3                   	ret
    1084:	66 90                	xchg   ax,ax
    1086:	66 90                	xchg   ax,ax
    1088:	66 90                	xchg   ax,ax
    108a:	66 90                	xchg   ax,ax
    108c:	66 90                	xchg   ax,ax
    108e:	66 90                	xchg   ax,ax

00001090 <deregister_tm_clones>:
    1090:	e8 e4 00 00 00       	call   1179 <__x86.get_pc_thunk.dx>
    1095:	81 c2 5f 2f 00 00    	add    edx,0x2f5f
    109b:	8d 8a 18 00 00 00    	lea    ecx,[edx+0x18]
    10a1:	8d 82 18 00 00 00    	lea    eax,[edx+0x18]
    10a7:	39 c8                	cmp    eax,ecx
    10a9:	74 1d                	je     10c8 <deregister_tm_clones+0x38>
    10ab:	8b 82 ec ff ff ff    	mov    eax,DWORD PTR [edx-0x14]
    10b1:	85 c0                	test   eax,eax
    10b3:	74 13                	je     10c8 <deregister_tm_clones+0x38>
    10b5:	55                   	push   ebp
    10b6:	89 e5                	mov    ebp,esp
    10b8:	83 ec 14             	sub    esp,0x14
    10bb:	51                   	push   ecx
    10bc:	ff d0                	call   eax
    10be:	83 c4 10             	add    esp,0x10
    10c1:	c9                   	leave
    10c2:	c3                   	ret
    10c3:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    10c7:	90                   	nop
    10c8:	c3                   	ret
    10c9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000010d0 <register_tm_clones>:
    10d0:	e8 a4 00 00 00       	call   1179 <__x86.get_pc_thunk.dx>
    10d5:	81 c2 1f 2f 00 00    	add    edx,0x2f1f
    10db:	55                   	push   ebp
    10dc:	89 e5                	mov    ebp,esp
    10de:	53                   	push   ebx
    10df:	8d 8a 18 00 00 00    	lea    ecx,[edx+0x18]
    10e5:	8d 82 18 00 00 00    	lea    eax,[edx+0x18]
    10eb:	83 ec 04             	sub    esp,0x4
    10ee:	29 c8                	sub    eax,ecx
    10f0:	89 c3                	mov    ebx,eax
    10f2:	c1 e8 1f             	shr    eax,0x1f
    10f5:	c1 fb 02             	sar    ebx,0x2
    10f8:	01 d8                	add    eax,ebx
    10fa:	d1 f8                	sar    eax,1
    10fc:	74 14                	je     1112 <register_tm_clones+0x42>
    10fe:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
    1104:	85 d2                	test   edx,edx
    1106:	74 0a                	je     1112 <register_tm_clones+0x42>
    1108:	83 ec 08             	sub    esp,0x8
    110b:	50                   	push   eax
    110c:	51                   	push   ecx
    110d:	ff d2                	call   edx
    110f:	83 c4 10             	add    esp,0x10
    1112:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1115:	c9                   	leave
    1116:	c3                   	ret
    1117:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    111e:	66 90                	xchg   ax,ax

00001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fb          	endbr32
    1124:	55                   	push   ebp
    1125:	89 e5                	mov    ebp,esp
    1127:	53                   	push   ebx
    1128:	e8 53 ff ff ff       	call   1080 <__x86.get_pc_thunk.bx>
    112d:	81 c3 c7 2e 00 00    	add    ebx,0x2ec7
    1133:	83 ec 04             	sub    esp,0x4
    1136:	80 bb 18 00 00 00 00 	cmp    BYTE PTR [ebx+0x18],0x0
    113d:	75 27                	jne    1166 <__do_global_dtors_aux+0x46>
    113f:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
    1145:	85 c0                	test   eax,eax
    1147:	74 11                	je     115a <__do_global_dtors_aux+0x3a>
    1149:	83 ec 0c             	sub    esp,0xc
    114c:	ff b3 14 00 00 00    	push   DWORD PTR [ebx+0x14]
    1152:	e8 e9 fe ff ff       	call   1040 <__cxa_finalize@plt>
    1157:	83 c4 10             	add    esp,0x10
    115a:	e8 31 ff ff ff       	call   1090 <deregister_tm_clones>
    115f:	c6 83 18 00 00 00 01 	mov    BYTE PTR [ebx+0x18],0x1
    1166:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1169:	c9                   	leave
    116a:	c3                   	ret
    116b:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    116f:	90                   	nop

00001170 <frame_dummy>:
    1170:	f3 0f 1e fb          	endbr32
    1174:	e9 57 ff ff ff       	jmp    10d0 <register_tm_clones>

00001179 <__x86.get_pc_thunk.dx>:
    1179:	8b 14 24             	mov    edx,DWORD PTR [esp]
    117c:	c3                   	ret

0000117d <main>:
    117d:	55                   	push   ebp
    117e:	89 e5                	mov    ebp,esp
    1180:	83 ec 10             	sub    esp,0x10
    1183:	e8 24 00 00 00       	call   11ac <__x86.get_pc_thunk.ax>
    1188:	05 6c 2e 00 00       	add    eax,0x2e6c
    118d:	c7 45 fc 0a 00 00 00 	mov    DWORD PTR [ebp-0x4],0xa
    1194:	c7 45 f8 05 00 00 00 	mov    DWORD PTR [ebp-0x8],0x5
    119b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    119e:	99                   	cdq
    119f:	f7 7d f8             	idiv   DWORD PTR [ebp-0x8]
    11a2:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    11a5:	b8 00 00 00 00       	mov    eax,0x0
    11aa:	c9                   	leave
    11ab:	c3                   	ret

000011ac <__x86.get_pc_thunk.ax>:
    11ac:	8b 04 24             	mov    eax,DWORD PTR [esp]
    11af:	c3                   	ret

Disassembly of section .fini:

000011b0 <_fini>:
    11b0:	53                   	push   ebx
    11b1:	83 ec 08             	sub    esp,0x8
    11b4:	e8 c7 fe ff ff       	call   1080 <__x86.get_pc_thunk.bx>
    11b9:	81 c3 3b 2e 00 00    	add    ebx,0x2e3b
    11bf:	83 c4 08             	add    esp,0x8
    11c2:	5b                   	pop    ebx
    11c3:	c3                   	ret

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    eax,DWORD PTR [eax]
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    DWORD PTR [eax],eax
    2006:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .eh_frame_hdr:

00002008 <__GNU_EH_FRAME_HDR>:
    2008:	01 1b                	add    DWORD PTR [ebx],ebx
    200a:	03 3b                	add    edi,DWORD PTR [ebx]
    200c:	30 00                	xor    BYTE PTR [eax],al
    200e:	00 00                	add    BYTE PTR [eax],al
    2010:	05 00 00 00 18       	add    eax,0x18000000
    2015:	f0 ff                	lock (bad)
    2017:	ff                   	(bad)
    2018:	78 00                	js     201a <__GNU_EH_FRAME_HDR+0x12>
    201a:	00 00                	add    BYTE PTR [eax],al
    201c:	38 f0                	cmp    al,dh
    201e:	ff                   	(bad)
    201f:	ff 9c 00 00 00 48 f0 	call   FWORD PTR [eax+eax*1-0xfb80000]
    2026:	ff                   	(bad)
    2027:	ff 4c 00 00          	dec    DWORD PTR [eax+eax*1+0x0]
    202b:	00 75 f1             	add    BYTE PTR [ebp-0xf],dh
    202e:	ff                   	(bad)
    202f:	ff b0 00 00 00 a4    	push   DWORD PTR [eax-0x5c000000]
    2035:	f1                   	int1
    2036:	ff                   	(bad)
    2037:	ff d0                	call   eax
    2039:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

0000203c <__FRAME_END__-0xb0>:
    203c:	14 00                	adc    al,0x0
    203e:	00 00                	add    BYTE PTR [eax],al
    2040:	00 00                	add    BYTE PTR [eax],al
    2042:	00 00                	add    BYTE PTR [eax],al
    2044:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    2047:	00 01                	add    BYTE PTR [ecx],al
    2049:	7c 08                	jl     2053 <__GNU_EH_FRAME_HDR+0x4b>
    204b:	01 1b                	add    DWORD PTR [ebx],ebx
    204d:	0c 04                	or     al,0x4
    204f:	04 88                	add    al,0x88
    2051:	01 07                	add    DWORD PTR [edi],eax
    2053:	08 10                	or     BYTE PTR [eax],dl
    2055:	00 00                	add    BYTE PTR [eax],al
    2057:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    205a:	00 00                	add    BYTE PTR [eax],al
    205c:	f4                   	hlt
    205d:	ef                   	out    dx,eax
    205e:	ff                   	(bad)
    205f:	ff 2c 00             	jmp    FWORD PTR [eax+eax*1]
    2062:	00 00                	add    BYTE PTR [eax],al
    2064:	00 00                	add    BYTE PTR [eax],al
    2066:	00 00                	add    BYTE PTR [eax],al
    2068:	14 00                	adc    al,0x0
    206a:	00 00                	add    BYTE PTR [eax],al
    206c:	00 00                	add    BYTE PTR [eax],al
    206e:	00 00                	add    BYTE PTR [eax],al
    2070:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    2073:	00 01                	add    BYTE PTR [ecx],al
    2075:	7c 08                	jl     207f <__GNU_EH_FRAME_HDR+0x77>
    2077:	01 1b                	add    DWORD PTR [ebx],ebx
    2079:	0c 04                	or     al,0x4
    207b:	04 88                	add    al,0x88
    207d:	01 00                	add    DWORD PTR [eax],eax
    207f:	00 20                	add    BYTE PTR [eax],ah
    2081:	00 00                	add    BYTE PTR [eax],al
    2083:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    2086:	00 00                	add    BYTE PTR [eax],al
    2088:	98                   	cwde
    2089:	ef                   	out    dx,eax
    208a:	ff                   	(bad)
    208b:	ff 20                	jmp    DWORD PTR [eax]
    208d:	00 00                	add    BYTE PTR [eax],al
    208f:	00 00                	add    BYTE PTR [eax],al
    2091:	0e                   	push   cs
    2092:	08 46 0e             	or     BYTE PTR [esi+0xe],al
    2095:	0c 4a                	or     al,0x4a
    2097:	0f 0b                	ud2
    2099:	74 04                	je     209f <__GNU_EH_FRAME_HDR+0x97>
    209b:	78 00                	js     209d <__GNU_EH_FRAME_HDR+0x95>
    209d:	3f                   	aas
    209e:	1a 3b                	sbb    bh,BYTE PTR [ebx]
    20a0:	2a 32                	sub    dh,BYTE PTR [edx]
    20a2:	24 22                	and    al,0x22
    20a4:	10 00                	adc    BYTE PTR [eax],al
    20a6:	00 00                	add    BYTE PTR [eax],al
    20a8:	40                   	inc    eax
    20a9:	00 00                	add    BYTE PTR [eax],al
    20ab:	00 94 ef ff ff 08 00 	add    BYTE PTR [edi+ebp*8+0x8ffff],dl
    20b2:	00 00                	add    BYTE PTR [eax],al
    20b4:	00 00                	add    BYTE PTR [eax],al
    20b6:	00 00                	add    BYTE PTR [eax],al
    20b8:	1c 00                	sbb    al,0x0
    20ba:	00 00                	add    BYTE PTR [eax],al
    20bc:	54                   	push   esp
    20bd:	00 00                	add    BYTE PTR [eax],al
    20bf:	00 bd f0 ff ff 2f    	add    BYTE PTR [ebp+0x2ffffff0],bh
    20c5:	00 00                	add    BYTE PTR [eax],al
    20c7:	00 00                	add    BYTE PTR [eax],al
    20c9:	41                   	inc    ecx
    20ca:	0e                   	push   cs
    20cb:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    20d1:	6b c5 0c             	imul   eax,ebp,0xc
    20d4:	04 04                	add    al,0x4
    20d6:	00 00                	add    BYTE PTR [eax],al
    20d8:	10 00                	adc    BYTE PTR [eax],al
    20da:	00 00                	add    BYTE PTR [eax],al
    20dc:	74 00                	je     20de <__GNU_EH_FRAME_HDR+0xd6>
    20de:	00 00                	add    BYTE PTR [eax],al
    20e0:	cc                   	int3
    20e1:	f0 ff                	lock (bad)
    20e3:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
    20e6:	00 00                	add    BYTE PTR [eax],al
    20e8:	00 00                	add    BYTE PTR [eax],al
	...

000020ec <__FRAME_END__>:
    20ec:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00003ee8 <__frame_dummy_init_array_entry>:
    3ee8:	70 11                	jo     3efb <_DYNAMIC+0xb>
	...

Disassembly of section .fini_array:

00003eec <__do_global_dtors_aux_fini_array_entry>:
    3eec:	20 11                	and    BYTE PTR [ecx],dl
	...

Disassembly of section .dynamic:

00003ef0 <_DYNAMIC>:
    3ef0:	01 00                	add    DWORD PTR [eax],eax
    3ef2:	00 00                	add    BYTE PTR [eax],al
    3ef4:	31 00                	xor    DWORD PTR [eax],eax
    3ef6:	00 00                	add    BYTE PTR [eax],al
    3ef8:	0c 00                	or     al,0x0
    3efa:	00 00                	add    BYTE PTR [eax],al
    3efc:	00 10                	add    BYTE PTR [eax],dl
    3efe:	00 00                	add    BYTE PTR [eax],al
    3f00:	0d 00 00 00 b0       	or     eax,0xb0000000
    3f05:	11 00                	adc    DWORD PTR [eax],eax
    3f07:	00 19                	add    BYTE PTR [ecx],bl
    3f09:	00 00                	add    BYTE PTR [eax],al
    3f0b:	00 e8                	add    al,ch
    3f0d:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3f10:	1b 00                	sbb    eax,DWORD PTR [eax]
    3f12:	00 00                	add    BYTE PTR [eax],al
    3f14:	04 00                	add    al,0x0
    3f16:	00 00                	add    BYTE PTR [eax],al
    3f18:	1a 00                	sbb    al,BYTE PTR [eax]
    3f1a:	00 00                	add    BYTE PTR [eax],al
    3f1c:	ec                   	in     al,dx
    3f1d:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3f20:	1c 00                	sbb    al,0x0
    3f22:	00 00                	add    BYTE PTR [eax],al
    3f24:	04 00                	add    al,0x0
    3f26:	00 00                	add    BYTE PTR [eax],al
    3f28:	f5                   	cmc
    3f29:	fe                   	(bad)
    3f2a:	ff 6f ec             	jmp    FWORD PTR [edi-0x14]
    3f2d:	01 00                	add    DWORD PTR [eax],eax
    3f2f:	00 05 00 00 00 7c    	add    BYTE PTR ds:0x7c000000,al
    3f35:	02 00                	add    al,BYTE PTR [eax]
    3f37:	00 06                	add    BYTE PTR [esi],al
    3f39:	00 00                	add    BYTE PTR [eax],al
    3f3b:	00 0c 02             	add    BYTE PTR [edx+eax*1],cl
    3f3e:	00 00                	add    BYTE PTR [eax],al
    3f40:	0a 00                	or     al,BYTE PTR [eax]
    3f42:	00 00                	add    BYTE PTR [eax],al
    3f44:	97                   	xchg   edi,eax
    3f45:	00 00                	add    BYTE PTR [eax],al
    3f47:	00 0b                	add    BYTE PTR [ebx],cl
    3f49:	00 00                	add    BYTE PTR [eax],al
    3f4b:	00 10                	add    BYTE PTR [eax],dl
    3f4d:	00 00                	add    BYTE PTR [eax],al
    3f4f:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
    3f55:	00 00                	add    BYTE PTR [eax],al
    3f57:	00 03                	add    BYTE PTR [ebx],al
    3f59:	00 00                	add    BYTE PTR [eax],al
    3f5b:	00 f4                	add    ah,dh
    3f5d:	3f                   	aas
    3f5e:	00 00                	add    BYTE PTR [eax],al
    3f60:	02 00                	add    al,BYTE PTR [eax]
    3f62:	00 00                	add    BYTE PTR [eax],al
    3f64:	08 00                	or     BYTE PTR [eax],al
    3f66:	00 00                	add    BYTE PTR [eax],al
    3f68:	14 00                	adc    al,0x0
    3f6a:	00 00                	add    BYTE PTR [eax],al
    3f6c:	11 00                	adc    DWORD PTR [eax],eax
    3f6e:	00 00                	add    BYTE PTR [eax],al
    3f70:	17                   	pop    ss
    3f71:	00 00                	add    BYTE PTR [eax],al
    3f73:	00 94 03 00 00 11 00 	add    BYTE PTR [ebx+eax*1+0x110000],dl
    3f7a:	00 00                	add    BYTE PTR [eax],al
    3f7c:	54                   	push   esp
    3f7d:	03 00                	add    eax,DWORD PTR [eax]
    3f7f:	00 12                	add    BYTE PTR [edx],dl
    3f81:	00 00                	add    BYTE PTR [eax],al
    3f83:	00 40 00             	add    BYTE PTR [eax+0x0],al
    3f86:	00 00                	add    BYTE PTR [eax],al
    3f88:	13 00                	adc    eax,DWORD PTR [eax]
    3f8a:	00 00                	add    BYTE PTR [eax],al
    3f8c:	08 00                	or     BYTE PTR [eax],al
    3f8e:	00 00                	add    BYTE PTR [eax],al
    3f90:	fb                   	sti
    3f91:	ff                   	(bad)
    3f92:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    3f95:	00 00                	add    BYTE PTR [eax],al
    3f97:	08 fe                	or     dh,bh
    3f99:	ff                   	(bad)
    3f9a:	ff 6f 24             	jmp    FWORD PTR [edi+0x24]
    3f9d:	03 00                	add    eax,DWORD PTR [eax]
    3f9f:	00 ff                	add    bh,bh
    3fa1:	ff                   	(bad)
    3fa2:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    3fa5:	00 00                	add    BYTE PTR [eax],al
    3fa7:	00 f0                	add    al,dh
    3fa9:	ff                   	(bad)
    3faa:	ff 6f 14             	jmp    FWORD PTR [edi+0x14]
    3fad:	03 00                	add    eax,DWORD PTR [eax]
    3faf:	00 fa                	add    dl,bh
    3fb1:	ff                   	(bad)
    3fb2:	ff 6f 04             	jmp    FWORD PTR [edi+0x4]
	...

Disassembly of section .got:

00003fe0 <.got>:
	...
    3fec:	7d 11                	jge    3fff <_GLOBAL_OFFSET_TABLE_+0xb>
    3fee:	00 00                	add    BYTE PTR [eax],al
    3ff0:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

00003ff4 <_GLOBAL_OFFSET_TABLE_>:
    3ff4:	f0 3e 00 00          	lock add BYTE PTR ds:[eax],al
	...
    4000:	36 10 00             	adc    BYTE PTR ss:[eax],al
	...

Disassembly of section .data:

00004004 <__data_start>:
    4004:	00 00                	add    BYTE PTR [eax],al
	...

00004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [eax+0x0],al
	...

Disassembly of section .bss:

0000400c <completed.0>:
    400c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 31 32 2e 	imul   esp,DWORD PTR [ecx+0x6e],0x2e323120
  10:	32 2e                	xor    ch,BYTE PTR [esi]
  12:	30 2d 31 34 2b 64    	xor    BYTE PTR ds:0x642b3431,ch
  18:	65 62 31             	bound  esi,QWORD PTR gs:[ecx]
  1b:	32 75 31             	xor    dh,BYTE PTR [ebp+0x31]
  1e:	29 20                	sub    DWORD PTR [eax],esp
  20:	31 32                	xor    DWORD PTR [edx],esi
  22:	2e 32 2e             	xor    ch,BYTE PTR cs:[esi]
  25:	30 00                	xor    BYTE PTR [eax],al
  27:	47                   	inc    edi
  28:	43                   	inc    ebx
  29:	43                   	inc    ebx
  2a:	3a 20                	cmp    ah,BYTE PTR [eax]
  2c:	28 63 6f             	sub    BYTE PTR [ebx+0x6f],ah
  2f:	6e                   	outs   dx,BYTE PTR ds:[esi]
  30:	64 61                	fs popa
  32:	2d 66 6f 72 67       	sub    eax,0x67726f66
  37:	65 20 67 63          	and    BYTE PTR gs:[edi+0x63],ah
  3b:	63 20                	arpl   WORD PTR [eax],sp
  3d:	31 34 2e             	xor    DWORD PTR [esi+ebp*1],esi
  40:	32 2e                	xor    ch,BYTE PTR [esi]
  42:	30 2d 32 29 20 31    	xor    BYTE PTR ds:0x31202932,ch
  48:	34 2e                	xor    al,0x2e
  4a:	32 2e                	xor    ch,BYTE PTR [esi]
  4c:	30 00                	xor    BYTE PTR [eax],al
